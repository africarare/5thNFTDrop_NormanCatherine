/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NormanCatherineDrop,
  NormanCatherineDropInterface,
} from "../NormanCatherineDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601581527f4e6f726d616e20436174686572696e652044726f7000000000000000000000006020808301918252835180850190945260038452621390d160ea1b908401528151919291620000729160009162000100565b5080516200008890600190602084019062000100565b50506006805460ff1916905550620000a033620000a6565b620001e3565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010e90620001a6565b90600052602060002090601f0160209004810192826200013257600085556200017d565b82601f106200014d57805160ff19168380011785556200017d565b828001600101855582156200017d579182015b828111156200017d57825182559160200191906001019062000160565b506200018b9291506200018f565b5090565b5b808211156200018b576000815560010162000190565b600181811c90821680620001bb57607f821691505b60208210811415620001dd57634e487b7160e01b600052602260045260246000fd5b50919050565b61185c80620001f36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb4651461025c578063b88d4fde1461026f578063c87b56dd14610282578063e985e9c514610295578063f2fde38b146102d157600080fd5b806370a082311461020d578063715018a61461022e5780638456cb59146102365780638da5cb5b1461023e57806395d89b411461025457600080fd5b80633f4ba83a116100f45780633f4ba83a146101c157806340d097c3146101c957806342842e0e146101dc5780635c975abb146101ef5780636352211e146101fa57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806323b872dd146101ae575b600080fd5b61014461013f366004611509565b6102e4565b60405190151581526020015b60405180910390f35b610161610336565b60405161015091906115f4565b61018161017c366004611543565b6103c8565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046114df565b610462565b005b6101ac6101bc36600461138b565b610578565b6101ac6105a9565b6101ac6101d736600461133d565b6105e3565b6101ac6101ea36600461138b565b61063c565b60065460ff16610144565b610181610208366004611543565b610657565b61022061021b36600461133d565b6106ce565b604051908152602001610150565b6101ac610755565b6101ac61078f565b60065461010090046001600160a01b0316610181565b6101616107c7565b6101ac61026a3660046114a3565b6107d6565b6101ac61027d3660046113c7565b6107e1565b610161610290366004611543565b610819565b6101446102a3366004611358565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102df36600461133d565b61091e565b60006001600160e01b031982166380ac58cd60e01b148061031557506001600160e01b03198216635b5e139f60e01b145b8061033057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103459061174e565b80601f01602080910402602001604051908101604052809291908181526020018280546103719061174e565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104465760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061046d82610657565b9050806001600160a01b0316836001600160a01b031614156104db5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161043d565b336001600160a01b03821614806104f757506104f781336102a3565b6105695760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161043d565b61057383836109bf565b505050565b6105823382610a2d565b61059e5760405162461bcd60e51b815260040161043d9061168e565b610573838383610b24565b6006546001600160a01b036101009091041633146105d95760405162461bcd60e51b815260040161043d90611659565b6105e1610ccb565b565b6006546001600160a01b036101009091041633146106135760405162461bcd60e51b815260040161043d90611659565b600061061e60075490565b905061062e600780546001019055565b6106388282610d5e565b5050565b610573838383604051806020016040528060008152506107e1565b6000818152600260205260408120546001600160a01b0316806103305760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161043d565b60006001600160a01b0382166107395760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161043d565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146107855760405162461bcd60e51b815260040161043d90611659565b6105e16000610d78565b6006546001600160a01b036101009091041633146107bf5760405162461bcd60e51b815260040161043d90611659565b6105e1610dd2565b6060600180546103459061174e565b610638338383610e4d565b6107eb3383610a2d565b6108075760405162461bcd60e51b815260040161043d9061168e565b61081384848484610f1c565b50505050565b6000818152600260205260409020546060906001600160a01b03166108985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161043d565b60006108cc60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905060008151116108ec5760405180602001604052806000815250610917565b806108f684610f4f565b604051602001610907929190611588565b6040516020818303038152906040525b9392505050565b6006546001600160a01b0361010090910416331461094e5760405162461bcd60e51b815260040161043d90611659565b6001600160a01b0381166109b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043d565b6109bc81610d78565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109f482610657565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610aa65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161043d565b6000610ab183610657565b9050806001600160a01b0316846001600160a01b03161480610aec5750836001600160a01b0316610ae1846103c8565b6001600160a01b0316145b80610b1c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610b3782610657565b6001600160a01b031614610b9b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161043d565b6001600160a01b038216610bfd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161043d565b610c0883838361104d565b610c136000826109bf565b6001600160a01b0383166000908152600360205260408120805460019290610c3c90849061170b565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c6a9084906116df565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60065460ff16610d145760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161043d565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610638828260405180602001604052806000815250611093565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615610e185760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161043d565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d413390565b816001600160a01b0316836001600160a01b03161415610eaf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161043d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f27848484610b24565b610f33848484846110c6565b6108135760405162461bcd60e51b815260040161043d90611607565b606081610f735750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f9d5780610f8781611789565b9150610f969050600a836116f7565b9150610f77565b60008167ffffffffffffffff811115610fb857610fb86117fa565b6040519080825280601f01601f191660200182016040528015610fe2576020820181803683370190505b5090505b8415610b1c57610ff760018361170b565b9150611004600a866117a4565b61100f9060306116df565b60f81b818381518110611024576110246117e4565b60200101906001600160f81b031916908160001a905350611046600a866116f7565b9450610fe6565b60065460ff16156105735760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161043d565b61109d83836111d3565b6110aa60008484846110c6565b6105735760405162461bcd60e51b815260040161043d90611607565b60006001600160a01b0384163b156111c857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061110a9033908990889088906004016115b7565b602060405180830381600087803b15801561112457600080fd5b505af1925050508015611154575060408051601f3d908101601f1916820190925261115191810190611526565b60015b6111ae573d808015611182576040519150601f19603f3d011682016040523d82523d6000602084013e611187565b606091505b5080516111a65760405162461bcd60e51b815260040161043d90611607565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b1c565b506001949350505050565b6001600160a01b0382166112295760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161043d565b6000818152600260205260409020546001600160a01b03161561128e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043d565b61129a6000838361104d565b6001600160a01b03821660009081526003602052604081208054600192906112c39084906116df565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b038116811461133857600080fd5b919050565b60006020828403121561134f57600080fd5b61091782611321565b6000806040838503121561136b57600080fd5b61137483611321565b915061138260208401611321565b90509250929050565b6000806000606084860312156113a057600080fd5b6113a984611321565b92506113b760208501611321565b9150604084013590509250925092565b600080600080608085870312156113dd57600080fd5b6113e685611321565b93506113f460208601611321565b925060408501359150606085013567ffffffffffffffff8082111561141857600080fd5b818701915087601f83011261142c57600080fd5b81358181111561143e5761143e6117fa565b604051601f8201601f19908116603f01168101908382118183101715611466576114666117fa565b816040528281528a602084870101111561147f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114b657600080fd5b6114bf83611321565b9150602083013580151581146114d457600080fd5b809150509250929050565b600080604083850312156114f257600080fd5b6114fb83611321565b946020939093013593505050565b60006020828403121561151b57600080fd5b813561091781611810565b60006020828403121561153857600080fd5b815161091781611810565b60006020828403121561155557600080fd5b5035919050565b60008151808452611574816020860160208601611722565b601f01601f19169290920160200192915050565b6000835161159a818460208801611722565b8351908301906115ae818360208801611722565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115ea9083018461155c565b9695505050505050565b602081526000610917602083018461155c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156116f2576116f26117b8565b500190565b600082611706576117066117ce565b500490565b60008282101561171d5761171d6117b8565b500390565b60005b8381101561173d578181015183820152602001611725565b838111156108135750506000910152565b600181811c9082168061176257607f821691505b6020821081141561178357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561179d5761179d6117b8565b5060010190565b6000826117b3576117b36117ce565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146109bc57600080fdfea26469706673582212208a1cbcd0b2f45e5ba1356339c8a750585469d1330d91dcf18fa2a2c98842efb764736f6c63430008070033";

type NormanCatherineDropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NormanCatherineDropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NormanCatherineDrop__factory extends ContractFactory {
  constructor(...args: NormanCatherineDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NormanCatherineDrop";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NormanCatherineDrop> {
    return super.deploy(overrides || {}) as Promise<NormanCatherineDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NormanCatherineDrop {
    return super.attach(address) as NormanCatherineDrop;
  }
  connect(signer: Signer): NormanCatherineDrop__factory {
    return super.connect(signer) as NormanCatherineDrop__factory;
  }
  static readonly contractName: "NormanCatherineDrop";
  public readonly contractName: "NormanCatherineDrop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NormanCatherineDropInterface {
    return new utils.Interface(_abi) as NormanCatherineDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NormanCatherineDrop {
    return new Contract(address, _abi, signerOrProvider) as NormanCatherineDrop;
  }
}
